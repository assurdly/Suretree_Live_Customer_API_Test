{"uid":"f454c030f7eb2fc4","name":"Consumer Loan - Submit Loan-Without Phone number","fullName":"Loans application for existing customer/Personal Loans/Consumer Loans#Consumer Loan - Submit Loan-Without Phone number","historyId":"da12747a-a08c-4789-8b51-4ff0d2c088a6","time":{"start":1702498809663,"stop":1702498809762,"duration":99},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that Status code name has OK, Verify that Body matches string","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that Status code name has OK, Verify that Body matches string","steps":[{"name":"Verify that Status code is 400","time":{"start":1702498809758,"stop":1702498809758,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 200","statusTrace":"AssertionError: expected response to have status code 400 but got 200\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that Status code name has OK","time":{"start":1702498809759,"stop":1702498809759,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'OK'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'OK'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:8:25)\n    at e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:7:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that Body matches string","time":{"start":1702498809759,"stop":1702498809759,"duration":0},"status":"failed","statusMessage":"expected '{\"SuccessMessage\":null,\"ErrorMessage\"…' to include 'Incomplete customer details submitted…'","statusTrace":"AssertionError: expected '{\"SuccessMessage\":null,\"ErrorMessage\"…' to include 'Incomplete customer details submitted…'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:11:38)\n    at e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:10:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that ResponseCode is 400","time":{"start":1702498809760,"stop":1702498809760,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"3fe794ec5e35642e","name":"Request Headers","source":"3fe794ec5e35642e.json","type":"application/json","size":345},{"uid":"efd6a4fc2bd31dc1","name":"Request Body","source":"efd6a4fc2bd31dc1.txt","type":"text/plain","size":28772},{"uid":"17ddad960adfd2d8","name":"Response Headers","source":"17ddad960adfd2d8.json","type":"application/json","size":251},{"uid":"325eef5a235424f7","name":"Response Body","source":"325eef5a235424f7.txt","type":"text/plain","size":280}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Loans application for existing customer"},{"name":"suite","value":"Personal Loans"},{"name":"subSuite","value":"Consumer Loans"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://qa-api.nairacompare.ng/api/loans/submit-loan-application"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f454c030f7eb2fc4.json","parameterValues":["POST - https://qa-api.nairacompare.ng/api/loans/submit-loan-application","200"]}