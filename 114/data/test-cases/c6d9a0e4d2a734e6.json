{"uid":"c6d9a0e4d2a734e6","name":"Refresh - successful","fullName":"Auth#Refresh - successful","historyId":"2029c59f-0a96-4062-8ddf-447a9e3c8ea9","time":{"start":1702494718938,"stop":1702494719051,"duration":113},"status":"failed","statusMessage":"Verify that Status code is 200, Verify that SuccessMessage returns 'new token has been generated successfully, Verify that error message returns null","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 200, Verify that SuccessMessage returns 'new token has been generated successfully, Verify that error message returns null","steps":[{"name":"Verify that Status code is 200","time":{"start":1702494719046,"stop":1702494719046,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that SuccessMessage returns 'new token has been generated successfully","time":{"start":1702494719047,"stop":1702494719047,"duration":0},"status":"failed","statusMessage":"No data, empty input at 1:1\n\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that error message returns null","time":{"start":1702494719048,"stop":1702494719048,"duration":0},"status":"failed","statusMessage":"No data, empty input at 1:1\n\n^","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fc5e4f0d0f2a4520","name":"Request Headers","source":"fc5e4f0d0f2a4520.json","type":"application/json","size":387},{"uid":"bdcf19172c091f9c","name":"Request Body","source":"bdcf19172c091f9c.txt","type":"text/plain","size":47},{"uid":"dbcdfa81973065b6","name":"Response Headers","source":"dbcdfa81973065b6.json","type":"application/json","size":260}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Auth"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://qa-api.nairacompare.ng/api/Auth/refresh-token"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c6d9a0e4d2a734e6.json","parameterValues":["POST - https://qa-api.nairacompare.ng/api/Auth/refresh-token","401"]}