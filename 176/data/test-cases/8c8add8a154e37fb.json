{"uid":"8c8add8a154e37fb","name":"PayDay  Loan - Submit Loan Without EmailAddress","fullName":"Loans application for existing customer/Personal Loans/Payday loans#PayDay  Loan - Submit Loan Without EmailAddress","historyId":"3ccefd19-f5b5-4862-b253-be37ed52dae7","time":{"start":1702983112595,"stop":1702983112718,"duration":123},"status":"failed","statusMessage":"Verify that Status code is 400, Verify that Status code name has OK, Verify that ErrorMessage text includes 'Email address is empty', Verify that ResponseCode is 400","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 400, Verify that Status code name has OK, Verify that ErrorMessage text includes 'Email address is empty', Verify that ResponseCode is 400","steps":[{"name":"Verify that Status code is 400","time":{"start":1702983112714,"stop":1702983112714,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that Status code name has OK","time":{"start":1702983112715,"stop":1702983112715,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:8:25)\n    at e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:7:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that ErrorMessage text includes 'Email address is empty'","time":{"start":1702983112716,"stop":1702983112716,"duration":0},"status":"failed","statusMessage":"expected '{\"isSuccess\":false,\"message\":\"Unautho…' to include 'Incomplete customer details submitted…'","statusTrace":"AssertionError: expected '{\"isSuccess\":false,\"message\":\"Unautho…' to include 'Incomplete customer details submitted…'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:11:38)\n    at e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:10:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that ResponseCode is 400","time":{"start":1702983112716,"stop":1702983112716,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 400","statusTrace":"AssertionError: expected undefined to deeply equal 400\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:15:41)\n    at e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:13:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"cc47efe6fd221e45","name":"Request Headers","source":"cc47efe6fd221e45.json","type":"application/json","size":856},{"uid":"5b9aff86382260dc","name":"Request Body","source":"5b9aff86382260dc.txt","type":"text/plain","size":8375},{"uid":"68501b91b070d6c0","name":"Response Headers","source":"68501b91b070d6c0.json","type":"application/json","size":234},{"uid":"fd32c767db1d13cd","name":"Response Body","source":"fd32c767db1d13cd.txt","type":"text/plain","size":97}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Loans application for existing customer"},{"name":"suite","value":"Personal Loans"},{"name":"subSuite","value":"Payday loans"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://qa-api.nairacompare.ng/api/loans/submit-loan-application"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"8c8add8a154e37fb.json","parameterValues":["POST - https://qa-api.nairacompare.ng/api/loans/submit-loan-application","401"]}