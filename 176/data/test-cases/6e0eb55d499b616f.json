{"uid":"6e0eb55d499b616f","name":"Submit Loan Application Copy","fullName":"Loans application for new user before sign up/Quick Loans#Submit Loan Application Copy","historyId":"cc09f46a-a559-47f3-a24a-c596f5e96dc6","time":{"start":1704749068333,"stop":1704749068523,"duration":190},"status":"failed","statusMessage":"Verify that SuccessMessage returned Successfully created, Verify that ResponseCode is 200","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that SuccessMessage returned Successfully created, Verify that ResponseCode is 200","steps":[{"name":"Verify that Status code is 200","time":{"start":1704749068520,"stop":1704749068520,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify that SuccessMessage returned Successfully created","time":{"start":1704749068521,"stop":1704749068521,"duration":0},"status":"failed","statusMessage":"expected null to deeply equal 'Successfully created'","statusTrace":"Error: expected null to deeply equal 'Successfully created'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:9:43)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:7:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that ResponseCode is 200","time":{"start":1704749068521,"stop":1704749068521,"duration":0},"status":"failed","statusMessage":"expected 500 to deeply equal 200","statusTrace":"Error: expected 500 to deeply equal 200\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:13:41)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:11:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ddda5712f7baa226","name":"Request Headers","source":"ddda5712f7baa226.json","type":"application/json","size":341},{"uid":"ed65973f0cfbc654","name":"Request Body","source":"ed65973f0cfbc654.txt","type":"text/plain","size":8681},{"uid":"a6d8ebeffc9d1c82","name":"Response Headers","source":"a6d8ebeffc9d1c82.json","type":"application/json","size":554},{"uid":"ef9b97cf023683d7","name":"Response Body","source":"ef9b97cf023683d7.txt","type":"text/plain","size":261}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Loans application for new user before sign up"},{"name":"suite","value":"Quick Loans"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://api.nairacompare.ng/api/loans/submit-loan-application"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"6e0eb55d499b616f.json","parameterValues":["POST - https://api.nairacompare.ng/api/loans/submit-loan-application","200"]}