{"uid":"ec7309b64bd9da02","name":"Get Customer Loans Application","fullName":"Loans application for existing customer/Personal Loans/Payday loans#Get Customer Loans Application","historyId":"839cb369-18dd-423a-a9a8-60573ac53f24","time":{"start":1702983768880,"stop":1702983769281,"duration":401},"status":"failed","statusMessage":"Verify that Status code is 200, Verify that success message returns data retrieve successfully, Verify that list is an array","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 200, Verify that success message returns data retrieve successfully, Verify that list is an array","steps":[{"name":"Verify that Status code is 200","time":{"start":1702983769277,"stop":1702983769277,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that success message returns data retrieve successfully","time":{"start":1702983769278,"stop":1702983769278,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'Data retrieve successfully.'","statusTrace":"AssertionError: expected undefined to deeply equal 'Data retrieve successfully.'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:9:43)\n    at e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:7:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that list is an array","time":{"start":1702983769278,"stop":1702983769278,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:13:36)\n    at e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:11:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4c10567e9a9b9625","name":"Request Headers","source":"4c10567e9a9b9625.json","type":"application/json","size":855},{"uid":"a0e8e136a2f8a60f","name":"Request Body","source":"a0e8e136a2f8a60f.txt","type":"text/plain","size":219},{"uid":"d026cf8e7460c574","name":"Response Headers","source":"d026cf8e7460c574.json","type":"application/json","size":234},{"uid":"ce79f888c248c33d","name":"Response Body","source":"ce79f888c248c33d.txt","type":"text/plain","size":97}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Loans application for existing customer"},{"name":"suite","value":"Personal Loans"},{"name":"subSuite","value":"Payday loans"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://qa-api.nairacompare.ng/api/loans/get-loan-application-search-list"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ec7309b64bd9da02.json","parameterValues":["POST - https://qa-api.nairacompare.ng/api/loans/get-loan-application-search-list","401"]}